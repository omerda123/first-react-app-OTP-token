{"version":3,"sources":["Components/Title.jsx","Components/spinner.jsx","Components/Form.jsx","Components/Button.jsx","Components/Banner.jsx","Components/Finish.jsx","App.js","serviceWorker.js","index.js"],"names":["Title","props","className","header","useStyles","makeStyles","theme","root","display","marginLeft","spacing","CircularIndeterminate","classes","CircularProgress","value","size","Form","type","maxLength","onBlur","e","setUserPassword","Button","class","onClick","click","Banner","text","Finish","icon","faCheckCircle","faTimesCircle","App","state","userPassword","pageIndex","password","isValid","texts","bannerText","shopAgain","iconClass","this","length","validatePassword","setState","target","console","log","window","location","reload","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3ba574b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Title(props) {\r\n    return (\r\n        <div className=\"top\">\r\n           <h1>{props.header}</h1>\r\n           <h2>Lorem ipsum dolor sit amet consectetur adipisicing elit. Sed soluta, cupiditate officia voluptatem voluptatibus </h2>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CircularIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress value={100} size={100}> </CircularProgress>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport Spinner from './spinner'\r\n\r\nexport default function Form(props) {\r\n    return (\r\n        <div className=\"form\">\r\n            <div className=\"inputs\">\r\n                <input type=\"text\" maxLength=\"1\"  onBlur={(e) => props.setUserPassword(e)}></input>\r\n                <input type=\"text\" maxLength=\"1\" onBlur={(e) => props.setUserPassword(e)}></input>\r\n                <input type=\"text\" maxLength=\"1\" onBlur={(e) => props.setUserPassword(e)}></input>\r\n                <input type=\"text\" maxLength=\"1\" onBlur={(e) => {\r\n                    props.setUserPassword(e);\r\n                    }}></input>\r\n            </div>\r\n            <Spinner></Spinner>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Button(props) {\r\n    return (\r\n        <div >\r\n           <button className={props.class} onClick={props.click}>{props.value}</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from './Button'\r\n\r\nexport default function Banner(props) {\r\n    return (\r\n        <div className=\"banner\">\r\n            {props.text}<Button value=\"Resend\" class=\"small\"></Button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle } from '@fortawesome/free-regular-svg-icons'\r\nimport { faTimesCircle } from '@fortawesome/free-regular-svg-icons'\r\n\r\n\r\nexport default function Finish(props) {\r\n    return (\r\n        <div className=\"finish\">\r\n            <FontAwesomeIcon icon={props.icon === \"faCheckCircle\" ? faCheckCircle : faTimesCircle} className={props.class} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\nimport Title from './Components/Title'\nimport Form from './Components/Form'\nimport Banner from './Components/Banner'\nimport Button from './Components/Button'\nimport Finish from './Components/Finish'\n\nimport './App.css'\n\n\nexport default class App extends Component {\n\n  state = {\n    userPassword: \"\",\n    pageIndex: 0,\n    password: \"1234\",\n    isValid: false,\n    texts: [\n      {\n        header: \"Waiting for the OTP\",\n        bannerText: \"Didnt recive OTP?\",\n        shopAgain: \"Shop again\",\n      },\n      {\n        header: \"Payment Succesfully done\",\n        icon:\"faCheckCircle\",\n        iconClass: \"check-circle\"\n      },\n      {\n        header: \"Payment failed\",\n        icon: \"faTimesCircle\",\n        iconClass: \"fail-circle\"\n      },\n    ]\n  }\n\n  componentDidUpdate(){\n    if(this.state.userPassword.length >= 4)\n      this.validatePassword()\n\n  }\n  setUserPassword(e) {\n    // this.state.userPassword += e.target.value;\n    this.setState ({ userPassword : this.state.userPassword +  e.target.value});\n  }\n  validatePassword() {\n    console.log(this.state.userPassword, this.state.password)\n    if (this.state.userPassword === this.state.password) {\n\n      this.setState({ userPassword :0 ,isValid: true, pageIndex: 1 })\n\n    }\n    else {\n      this.setState({ userPassword :0, pageIndex: 2 })\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n\n        <Title header={this.state.texts[this.state.pageIndex].header}> </Title>\n        <div className=\"center\">\n        {\n          this.state.pageIndex === 0 ?\n            <>\n              <Form setUserPassword={(e) => this.setUserPassword(e)} validatePassword={() => this.validatePassword()}></Form>\n              <Banner text={this.state.texts[this.state.pageIndex].bannerText}></Banner>\n            </> :\n            <Finish icon={this.state.texts[this.state.pageIndex].icon} class={this.state.texts[this.state.pageIndex].iconClass}></Finish>\n        }\n        </div>\n        <div className=\"footer\">\n        <Button value={this.state.texts[0].shopAgain} click={()=> window.location.reload()} class=\"big\"></Button>\n        </div>\n      </div>\n\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}